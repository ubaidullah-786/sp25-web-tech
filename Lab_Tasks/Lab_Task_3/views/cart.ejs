<div class="cart-page">
  <div class="container">
    <div class="cart-wrapper">
      <div class="cart-section">
        <h1 class="section-title">YOUR CART</h1>
        <p class="section-subtitle">
          Review your items and proceed to checkout
        </p>

        <% if (!cart.length) { %>
        <!-- Empty Cart State -->
        <div class="empty-cart">
          <p class="empty-message">Your cart is empty</p>
          <a href="/products" class="shop-now-btn">SHOP NOW</a>
        </div>
        <% } else { %>
        <!-- Cart with Items -->
        <div class="cart-content">
          <div class="cart-items">
            <% cart.forEach(item => { %>
            <div class="cart-item">
              <div class="item-info">
                <h3 class="item-title"><%= item.title %></h3>
              </div>
              <div class="item-price">
                <span class="price-label">Price</span>
                <span class="price-value">$<%= item.price.toFixed(2) %></span>
              </div>
              <div class="item-quantity">
                <label for="qty_<%= item.productId %>" class="qty-label"
                  >Quantity</label
                >
                <form class="item-form" action="/cart" method="POST">
                  <div class="qty-controls">
                    <button
                      type="button"
                      class="qty-btn qty-minus"
                      data-target="qty_<%= item.productId %>"
                    >
                      −
                    </button>
                    <input
                      type="number"
                      id="qty_<%= item.productId %>"
                      name="qty"
                      value="<%= item.qty %>"
                      min="0"
                      max="99"
                      class="qty-input"
                    />
                    <button
                      type="button"
                      class="qty-btn qty-plus"
                      data-target="qty_<%= item.productId %>"
                    >
                      +
                    </button>
                  </div>
                  <input
                    type="hidden"
                    name="productId"
                    value="<%= item.productId %>"
                  />
                  <button type="submit" class="update-item-btn">Update</button>
                </form>
              </div>
              <div class="item-subtotal">
                <span class="subtotal-label">Subtotal</span>
                <span class="subtotal-value"
                  >$<%= (item.price * item.qty).toFixed(2) %></span
                >
              </div>
            </div>
            <% }) %>
          </div>

          <div class="cart-summary">
            <div class="summary-row total-row">
              <span class="summary-label">Total:</span>
              <span class="summary-value total-value"
                >$<%= total.toFixed(2) %></span
              >
            </div>
          </div>

          <div class="cart-actions">
            <a href="/checkout" class="checkout-btn">PROCEED TO CHECKOUT</a>
          </div>

          <div class="continue-shopping">
            <a href="/products" class="continue-link">← Continue Shopping</a>
          </div>
        </div>
        <% } %>
      </div>
    </div>
  </div>
</div>

<style>
  .cart-page {
    padding: 6rem 2rem;
    max-width: 90rem;
    margin: 0 auto;
    color: #333;
    min-height: 60vh;
  }

  .container {
    width: 100%;
  }

  .cart-wrapper {
    background: #fff;
    padding: 4rem;
    border-radius: 0.8rem;
    box-shadow: 0 0.2rem 1rem rgba(0, 0, 0, 0.1);
  }

  .cart-section {
    text-align: center;
  }

  .section-title {
    font-size: 3.2rem;
    font-weight: 600;
    letter-spacing: 0.1rem;
    color: #2c2c2c;
    margin-bottom: 1rem;
  }

  .section-subtitle {
    font-size: 1.6rem;
    color: #666;
    margin-bottom: 4rem;
  }

  /* Empty Cart */
  .empty-cart {
    padding: 4rem 0;
  }

  .empty-message {
    font-size: 1.8rem;
    color: #666;
    margin-bottom: 2rem;
  }

  .shop-now-btn {
    display: inline-block;
    background: #000;
    color: white;
    padding: 1.6rem 3rem;
    text-decoration: none;
    font-size: 1.4rem;
    font-weight: 600;
    letter-spacing: 0.1rem;
    border-radius: 0.4rem;
    transition: background-color 0.3s ease;
  }

  .shop-now-btn:hover {
    background: #333;
  }

  /* Cart Content */
  .cart-content {
    text-align: left;
  }

  .cart-form {
    max-width: 100%;
  }

  .cart-items {
    margin-bottom: 3rem;
  }

  .cart-item {
    display: grid;
    grid-template-columns: 2fr 1fr 1fr 1fr auto;
    gap: 2rem;
    align-items: center;
    padding: 2.5rem 0;
    border-bottom: 1px solid #eee;
  }

  .cart-item:first-child {
    border-top: 1px solid #eee;
  }

  .item-info h3 {
    font-size: 1.6rem;
    font-weight: 600;
    color: #2c2c2c;
    margin: 0;
  }

  .price-label,
  .qty-label,
  .subtotal-label {
    display: block;
    font-size: 1.2rem;
    font-weight: 500;
    color: #666;
    margin-bottom: 0.5rem;
    text-transform: uppercase;
    letter-spacing: 0.05rem;
  }

  .price-value,
  .subtotal-value {
    font-size: 1.6rem;
    font-weight: 600;
    color: #2c2c2c;
  }

  /* Item Form */
  .item-form {
    display: contents;
  }

  /* Quantity Controls */
  .qty-controls {
    display: flex;
    align-items: center;
    border: 1px solid #ddd;
    border-radius: 0.4rem;
    overflow: hidden;
    width: fit-content;
  }

  .qty-btn {
    background: #f8f8f8;
    border: none;
    padding: 1rem 1.2rem;
    font-size: 1.4rem;
    font-weight: 600;
    color: #666;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }

  .qty-btn:hover {
    background: #e8e8e8;
    color: #000;
  }

  .qty-input {
    border: none;
    padding: 1rem;
    width: 5rem;
    text-align: center;
    font-size: 1.4rem;
    background: #fff;
  }

  .qty-input::-webkit-outer-spin-button,
  .qty-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  .qty-input:focus {
    outline: none;
  }

  .update-item-btn {
    background: #fff;
    border: 2px solid #000;
    color: #000;
    padding: 0.8rem 1.6rem;
    font-size: 1.2rem;
    font-weight: 600;
    letter-spacing: 0.05rem;
    cursor: pointer;
    border-radius: 0.4rem;
    transition: all 0.2s ease;
    position: absolute;
    left: 250px;
    bottom: 10px;
  }

  .item-quantity {
    position: relative;
  }

  .update-item-btn:hover {
    background: #f8f8f8;
  }

  /* Cart Summary */
  .cart-summary {
    background: #f8f8f8;
    padding: 2.5rem;
    border-radius: 0.4rem;
    margin-bottom: 3rem;
    max-width: 40rem;
    margin-left: auto;
  }

  .summary-row {
    display: flex;
    justify-content: space-between;
    margin-bottom: 1rem;
  }

  .summary-row:last-child {
    margin-bottom: 0;
  }

  .summary-label {
    font-size: 1.4rem;
    color: #666;
  }

  .summary-value {
    font-size: 1.4rem;
    font-weight: 500;
    color: #2c2c2c;
  }

  .total-row .summary-label,
  .total-row .summary-value {
    font-size: 1.8rem;
    font-weight: 600;
    color: #2c2c2c;
  }

  /* Cart Actions */
  .cart-actions {
    display: flex;
    justify-content: flex-end;
    margin-bottom: 3rem;
  }

  .checkout-btn {
    background: #000;
    color: white;
    padding: 1.6rem 3rem;
    font-size: 1.4rem;
    font-weight: 600;
    letter-spacing: 0.1rem;
    border-radius: 0.4rem;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    display: inline-block;
    text-align: center;
  }

  .checkout-btn:hover {
    background: #333;
  }

  .continue-shopping {
    text-align: left;
  }

  .continue-link {
    color: #666;
    text-decoration: none;
    font-size: 1.4rem;
    transition: color 0.2s ease;
  }

  .continue-link:hover {
    color: #000;
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .cart-item {
      grid-template-columns: 1fr;
      gap: 1.5rem;
      text-align: center;
    }

    .item-info {
      text-align: left;
    }

    .cart-summary {
      max-width: none;
      margin-left: 0;
    }
  }

  @media (max-width: 768px) {
    .cart-page {
      padding: 4rem 1rem;
    }

    .cart-wrapper {
      padding: 3rem 2rem;
    }

    .section-title {
      font-size: 2.8rem;
    }

    .cart-item {
      padding: 2rem 0;
    }

    .item-info h3 {
      font-size: 1.4rem;
    }

    .checkout-btn {
      padding: 1.4rem 2rem;
      width: 100%;
    }
  }

  @media (max-width: 480px) {
    .cart-wrapper {
      padding: 2rem 1.5rem;
    }

    .section-title {
      font-size: 2.4rem;
    }

    .qty-controls {
      justify-self: center;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Quantity control buttons
    const qtyButtons = document.querySelectorAll('.qty-btn');

    // Handle quantity increment/decrement
    qtyButtons.forEach(button => {
      button.addEventListener('click', function () {
        const targetId = this.getAttribute('data-target');
        const input = document.getElementById(targetId);
        const isPlus = this.classList.contains('qty-plus');
        let currentValue = parseInt(input.value) || 0;

        if (isPlus) {
          if (currentValue < 99) {
            input.value = currentValue + 1;
          }
        } else {
          if (currentValue > 0) {
            input.value = currentValue - 1;
          }
        }

        // Update subtotal display
        updateSubtotal(input);
      });
    });

    // Update subtotal for individual items (visual update only)
    function updateSubtotal(qtyInput) {
      const cartItem = qtyInput.closest('.cart-item');
      const priceElement = cartItem.querySelector('.price-value');
      const subtotalElement = cartItem.querySelector('.subtotal-value');

      const price = parseFloat(priceElement.textContent.replace('$', ''));
      const quantity = parseInt(qtyInput.value);
      const subtotal = price * quantity;

      subtotalElement.textContent = '$' + subtotal.toFixed(2);
      updateCartTotal();
    }

    // Update cart total (visual update only)
    function updateCartTotal() {
      const subtotals = document.querySelectorAll('.subtotal-value');
      let total = 0;

      subtotals.forEach(subtotal => {
        total += parseFloat(subtotal.textContent.replace('$', ''));
      });

      const totalValue = document.querySelector('.total-value');
      if (totalValue) totalValue.textContent = '$' + total.toFixed(2);
    }

    // Prevent quantity input from going below 0
    const qtyInputs = document.querySelectorAll('.qty-input');
    qtyInputs.forEach(input => {
      input.addEventListener('change', function () {
        if (parseInt(this.value) < 0) {
          this.value = 0;
        }
        updateSubtotal(this);
      });
    });
  });
</script>
